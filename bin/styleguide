#!/usr/bin/env node

var app,
  args = ['styleguide'],
  argv,
  chalk = require('chalk'),
  gulpProcess,
  spawn = require('child_process').spawn,
  yargs = require('yargs');

argv = yargs
  .usage('This is how ' + chalk.cyan.bold('YOU') + ' can generate ' +
    chalk.cyan.bold('COOL') + ' styleguides')
  .example('$0 -s <src>', 'Generate a styleguide from src')
  .example('$0 -s <src> -o <dest>', 'Generate a styleguide to dest using src')
  .demand('s', chalk.red('Please provide source path using -s <path>'))
  .demand('o', chalk.red('Please provide output path using -o <path>'))
  .describe('s', 'Source file(s)')
  .describe('o', 'Output directory')
  .describe('m', 'Path to markdown file')
  .argv;

// Format args to be used with spawn
argv.s = argv.s.replace(/\/+$/, "");
argv.o = argv.o.replace(/\/+$/, "");
argv.m = argv.m ? argv.m.replace(/\/+$/, "") : undefined;
args = args.concat(['--source', argv.s]);
args = args.concat(['--output', argv.o]);
if (argv.m) {
  args = args.concat(['--markdown', argv.m]);
}

gulpProcess = spawn(__dirname + '/../node_modules/gulp/bin/gulp.js', args);

gulpProcess.stdout.on('data', function (data) {
  console.log('stdout: ' + data);
});

gulpProcess.stderr.on('data', function (data) {
  console.log('stderr: ' + data);
});

gulpProcess.on('close', function (code) {
  var serverProcess;
  console.log('styleguide process exited with code ' + code);
  if (argv.server || argv.serve) {
    serverProcess = spawn(__dirname + '/../node_modules/gulp/bin/gulp.js', ['serve']);

    serverProcess.stdout.on('data', function (data) {
      console.log('stdout: ' + data);
    });

    serverProcess.stderr.on('data', function (data) {
      console.log('stderr: ' + data);
    });

    serverProcess.on('close', function (code) {
      console.log('server process exited with code ' + code);
    });
  }
});

