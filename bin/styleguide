#!/usr/bin/env node

var styleguide = require(__dirname + '/../lib/styleguide.js'),
  gulp = require('gulp'),
  runSequence = require('run-sequence'),
  args = ['styleguide'],
  chalk = require('chalk'),
  path = require('path'),
  yargs = require('yargs'),
  neat = require('node-neat'),
  util = require('gulp-util'),
  argv,
  gulpProcess,
  config,
  configPath,
  sourcePath,
  sourceFiles,
  outputPath;

argv = yargs
  .usage('This is how ' + chalk.cyan.bold('YOU') + ' can generate ' +
    chalk.cyan.bold('COOL') + ' styleguides')
  .example('$0 -s <src> -o <dest>', 'Generate a styleguide to dest using src')
  .example('$0 -s <src> -o <dest> --watch', 'Generate a styleguide to dest using src and run server watching changes')
  .demand('source', chalk.red('Please provide source path using -s <path>'))
  .demand('output', chalk.red('Please provide output path using -o <path>'))
  .alias('o', 'output')
  .alias('s', 'source')
  .alias('c', 'config')
  .describe('s', 'Source file(s)')
  .describe('o', 'Output directory')
  .describe('c', 'Path to config JSON file')
  .describe('server', 'Start minimal web-server to host the styleguide from the output directory')
  .describe('watch', 'Automatically generate styleguide on file change')
  .argv;

sourcePath = path.resolve(argv.source);
sourceFiles = [sourcePath + '/**/*.css', sourcePath + '/**/*.scss', sourcePath + '/**/*.less'];
outputPath = path.resolve(argv.output);
configPath = argv.config ? path.resolve(argv.config) : undefined;
config = configPath ? require(configPath) : {};

gulp.task('styleguide', function() {
  // Resolve overviewPath in relation to config file location
  var overviewPath;
  if (config.overviewPath) {
    overviewPath = path.resolve(path.dirname(argv.config), config.overviewPath);
  }
  gulp.src(sourceFiles)
    .pipe(styleguide({
      extraHead: config.extraHead,
      overviewPath: overviewPath,
      socketIo: !!argv.server,
      sass: {
        loadPath: neat.includePaths
      }
    }))
    .pipe(gulp.dest(outputPath));
});

gulp.task('serve', function() {
  var serverModule = require('../lib/server')(sourcePath, outputPath),
    app = serverModule.app,
    server = serverModule.server;

  app.set('port', util.env.port || 3000);
  server = server.listen(app.get('port'), function() {
    console.log('Express server listening on port ' + server.address().port);
  });
});

gulp.task('watch', function() {
  gulp.watch(sourceFiles, ['styleguide']);
});

var tasks = ['styleguide'];
if (argv.server) {
  tasks.push('serve');
}
if (argv.watch) {
  tasks.push('watch');
}
runSequence.apply(this, tasks);
