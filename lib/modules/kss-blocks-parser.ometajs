ometa kssBlocksParser {

  lineBreak = seq('\n'),
  lineEnd = lineBreak | end,

  inlineCommentPrefix = seq('//'),
  lineWithNoComments = (~inlineCommentPrefix char)* lineEnd,

  kssReferenceNumber_ = '.' digit+ kssReferenceNumber_*,
  kssReferenceNumber = digit+ kssReferenceNumber_*,

  kssReferenceString = seq(' ')* seq('Styleguide ') kssReferenceNumber seq(' ')*,

  inlineComment = inlineCommentPrefix (~lineEnd ~kssReferenceString char)*,

  multiLineCommentPrefix = seq('/*'),
  multiLineCommentSuffix = seq('*/'),
  multiLineCommentBody = (~multiLineCommentSuffix char)*,
  multiLineComment = (multiLineCommentPrefix multiLineCommentBody multiLineCommentSuffix):c -> [#comment, c],

  kssLastString = inlineCommentPrefix kssReferenceString lineEnd,
  kssMarkupInline = ((~lineWithNoComments inlineComment lineEnd)* kssLastString):k -> [#kss, k],

  kssLastStringMultiline = kssReferenceString lineEnd,
  kssMarkupMultiLineBody = (~multiLineCommentSuffix ~kssLastStringMultiline char)* kssLastStringMultiline,
  kssMarkupMultiLine = (multiLineCommentPrefix kssMarkupMultiLineBody multiLineCommentSuffix):k -> [#kss, k],

  kssMarkup = kssMarkupInline | kssMarkupMultiLine,

  code = (~kssMarkup char)*:c -> [#code, c.join('')],

  block = kssMarkup:k lineEnd* code:c -> [#block, k, c],

  any = code? (block)*

}
